

####################################################################################################################################
#                                                Variables [1;32m(To be used)[0m                                                            #
####################################################################################################################################
#                                                                                                                                  #
#  0  :  ("Btrk1Pt"  , "Btrk1Pt"                                                                                        , "FMax")  #[0m
#  1  :  ("Btrk2Pt"  , "Btrk2Pt"                                                                                        , "FMax")  #[0m
#  2  :  ("Trk1DCAz" , "Trk1DCAz := abs(Btrk1Dz1/Btrk1DzError1)"                                                                                       , "FMin")  #[0m
#  3  :  ("Trk2DCAz" , "Trk2DCAz := abs(Btrk2Dz1/Btrk2DzError1)"                                                                                       , "FMin")  #[0m
#  4  :  ("Trk1DCAxy"  , "Trk1DCAxy := abs(Btrk1Dxy1/Btrk1DxyError1)"                                                                 , "FMin")  #[0m
#  5  :  ("Trk2DCAxy"  , "Trk2DCAxy := abs(Btrk2Dxy1/Btrk2DxyError1)"                                                                 , "FMin")  #[0m
#  7  :  ("dls"      , "dls := BsvpvDistance/BsvpvDisErr"                                                                 , "FMax")  #[0m
#  8  :  ("Balpha"   , "Balpha"                                                                                          , "FMax")  #[0m
#  9  :  ("dls2D"    , "dls2D := Bd0"                                                                             , "FMin")  #[0m
#  10 :  ("cos(Bdtheta)", "cos(Bdtheta)"                                                                                 , "FMax")  #[0m
#  11 :  ("Bchi2cl",    "Bchi2cl"                                                                                             , ""    )  #[0m
#  12 :  ("Btrk1Eta", "Btrk1Eta"                                                                                 , "FMin")  #[0m
# 13:  ("BDT_pt_1_2", "BDT_pt_1_2"                                                                                 , "FMin")  #[0m
[1;32m# 14:  ("BDT_pt_2_3", "BDT_pt_2_3"                                                                                 , "FMin")  #[0m
[1;32m# 15:  ("BDT_pt_3_5", "BDT_pt_3_5"                                                                                 , "FMin")  #[0m
[1;32m# 16:  ("BDT_pt_5_7", "BDT_pt_5_7"                                                                                 , "FMin")  #[0m
[1;32m# 17:  ("BDT_pt_7_10", "BDT_pt_7_10"                                                                                 , "FMin")  #[0m
[1;32m# 18:  ("BDT_pt_10_15", "BDT_pt_10_15"                                                                                 , "FMin")  #[0m
[1;32m# 19:  ("BDT_pt_15_20", "BDT_pt_15_20"                                                                                 , "FMin")  #[0m
[1;32m# 20:  ("BDT_pt_20_30", "BDT_pt_20_30"                                                                                 , "FMin")  #[0m
[1;32m# 21:  ("BDT_pt_30_50", "BDT_pt_30_50"                                                                                 , "FMin")  #[0m
#                                                                                                                                  #
####################################################################################################################################



==> Start TMVAClassification
==> TMVAClassification: Registered method BDT
==> TMVAClassification: Registered method BDTG
--- TMVAClassification       : Using input file: /data/szhaozho/ppNewTMVA/CMSSW_10_3_2/src/Bs/SamplesNew/BsMCAllBDT.root & /data/szhaozho/ppNewTMVA/CMSSW_10_3_2/src/Bs/SamplesNew/BsDataAllBDT.root
Pass 0
Pass 1
Pass 2
Pass 3
==> TMVAClassification: Registered variable Btrk2Eta
==> TMVAClassification: Registered variable Bmass
==> TMVAClassification: Registered variable BDT_pt_1_2
==> TMVAClassification: Registered variable BDT_pt_2_3
==> TMVAClassification: Registered variable BDT_pt_3_5
==> TMVAClassification: Registered variable BDT_pt_5_7
==> TMVAClassification: Registered variable BDT_pt_7_10
==> TMVAClassification: Registered variable BDT_pt_10_15
==> TMVAClassification: Registered variable BDT_pt_15_20
==> TMVAClassification: VarSet = 
Pass 4
DataSetInfo              : [dataset] : Added class "Signal"
                         : Add Tree ntphi of type Signal with 454261 events
DataSetInfo              : [dataset] : Added class "Background"
                         : Add Tree ntphi of type Background with 866022732 events
Pass 5
Pass 6
Pass 7
Factory                  : Booking method: [1mBDTG[0m
                         : 
                         : the option *InverseBoostNegWeights* does not exist for BoostType=Grad --> change
                         : to new default for GradBoost *Pray*
<WARNING>                : Expression: Btrk2Eta does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: Bmass does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_1_2 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_2_3 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_3_5 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_5_7 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_7_10 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_10_15 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_15_20 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: (Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) && Bgen==23333)&&Bpt>0.000000&&Bpt<100.000000 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Please check class "Signal" cut "(Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) && Bgen==23333)&&Bpt>0.000000&&Bpt<100.000000
<WARNING>                : Expression: (Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) &&  (abs(Bmass - 5.36682 ) > 0.20 &&  abs(Bmass - 5.36682) < 0.30))&&Bpt>0.000000&&Bpt<100.000000 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Please check class "Background" cut "(Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) &&  (abs(Bmass - 5.36682 ) > 0.20 &&  abs(Bmass - 5.36682) < 0.30))&&Bpt>0.000000&&Bpt<100.000000
<WARNING>                : Expression: Btrk2Eta does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: Bmass does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_1_2 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_2_3 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_3_5 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_5_7 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_7_10 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_10_15 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: BDT_pt_15_20 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Expression: (Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) && Bgen==23333)&&Bpt>0.000000&&Bpt<100.000000 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Please check class "Signal" cut "(Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) && Bgen==23333)&&Bpt>0.000000&&Bpt<100.000000
<WARNING>                : Expression: (Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) &&  (abs(Bmass - 5.36682 ) > 0.20 &&  abs(Bmass - 5.36682) < 0.30))&&Bpt>0.000000&&Bpt<100.000000 does not provide data for this event. This event is not taken into account. --> please check if you use as a variable an entry of an array which is not filled for some events (e.g. arr[4] when arr has only 3 elements).
<WARNING>                : If you want to take the event into account you can do something like: "Alt$(arr[4],0)" where in cases where arr doesn't have a 4th element,  0 is taken as an alternative.
<WARNING>                : Please check class "Background" cut "(Btrk1Pt > 0.2 && Bchi2cl > 0.05 && BsvpvDistance/BsvpvDisErr > 2.0 && Bpt > 2 && abs(Btrk1Eta-0.0) < 2.4  && (TMath::Abs(By)<2.4&&TMath::Abs(Bmumumass-3.096916)<0.15&&((abs(Bmu1eta)<1.2&&Bmu1pt>3.5)||(abs(Bmu1eta)>1.2&&abs(Bmu1eta)<2.1&&Bmu1pt>(5.47-1.89*abs(Bmu1eta)))||(abs(Bmu1eta)>2.1&&abs(Bmu1eta)<2.4&&Bmu1pt>1.5))&&((abs(Bmu2eta)<1.2&&Bmu2pt>3.5)||(abs(Bmu2eta)>1.2&&abs(Bmu2eta)<2.1&&Bmu2pt>(5.47-1.89*abs(Bmu2eta)))||(abs(Bmu2eta)>2.1&&abs(Bmu2eta)<2.4&&Bmu2pt>1.5))&&Bmu1TMOneStationTight&&Bmu2TMOneStationTight&&Bmu1InPixelLayer>0&&(Bmu1InPixelLayer+Bmu1InStripLayer)>5&&Bmu2InPixelLayer>0&&(Bmu2InPixelLayer+Bmu2InStripLayer)>5&&Bmu1dxyPV<0.3&&Bmu2dxyPV<0.3&&Bmu1dzPV<20&&Bmu2dzPV<20&&Bmu1isTrackerMuon&&Bmu2isTrackerMuon&&Bmu1isGlobalMuon&&Bmu2isGlobalMuon&&Btrk1highPurity &&Btrk2highPurity&& abs(Btrk1Eta)<2.4 && abs(Btrk1Eta)<2.4 && Btrk1Pt>0.2 && Btrk2Pt>0.2)  && (Btrk1PixelHit + Btrk1StripHit > 10)  && (Btrk2PixelHit + Btrk2StripHit > 10) &&  (Btrk1PtErr/Btrk1Pt < 0.1) && (Btrk2PtErr/Btrk2Pt < 0.1)   && Btrk1Chi2ndf/(Btrk1nStripLayer+Btrk1nPixelLayer) < 0.18 && Btrk2Chi2ndf/(Btrk2nStripLayer+Btrk2nPixelLayer) < 0.18   && (abs(PVz)<15) &&  (abs(Bmass - 5.36682 ) > 0.20 &&  abs(Bmass - 5.36682) < 0.30))&&Bpt>0.000000&&Bpt<100.000000
